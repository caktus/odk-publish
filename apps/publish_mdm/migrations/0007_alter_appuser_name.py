# Generated by Django 5.1.5 on 2025-03-13 18:08

import re

import django.core.validators
from django.db import migrations, models
from django.utils.text import slugify


def slugify_invalid_app_user_names(apps, schema_editor):
    model = apps.get_model("publish_mdm", "AppUser")
    for app_user in model.objects.all():
        if not re.match(r"^(((:[a-zA-Z_]:?)?[-\w]*)|([-\w]+:[a-zA-Z_][-\w]*))$", app_user.name):
            new_name = slugify(app_user.name)
            if app_user.project.app_users.filter(name=new_name).exists():
                # A user with the name exists in the project. Add the ID so it's unique
                new_name += f"-{app_user.id}"
            app_user.name = new_name
            app_user.save()


class Migration(migrations.Migration):
    dependencies = [
        ("publish_mdm", "0006_merge_20250311_1712"),
    ]

    operations = [
        migrations.AlterField(
            model_name="appuser",
            name="name",
            field=models.CharField(
                db_collation="case_insensitive",
                max_length=255,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Name can only contain alphanumeric characters, underscores, hyphens, and not more than one colon.",
                        regex="^(((:[a-zA-Z_]:?)?[-\\w]*)|([-\\w]+:[a-zA-Z_][-\\w]*))$",
                    )
                ],
            ),
        ),
        migrations.RunPython(slugify_invalid_app_user_names, migrations.RunPython.noop),
    ]
