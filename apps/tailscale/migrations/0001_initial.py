# Generated by Django 5.1.4 on 2024-12-29 21:21

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DeviceSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "addresses",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=32),
                        help_text="A list of Tailscale IP addresses for the device, including both IPv4 and IPv6.",
                        size=None,
                    ),
                ),
                (
                    "client_version",
                    models.CharField(
                        blank=True,
                        help_text="The version of the Tailscale client software.",
                        max_length=32,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        help_text="The date on which the device was added to the tailnet.",
                        verbose_name="date added to tailnet",
                    ),
                ),
                (
                    "expires",
                    models.DateTimeField(
                        blank=True,
                        help_text="The expiration date of the device's auth key.",
                        null=True,
                    ),
                ),
                (
                    "hostname",
                    models.CharField(
                        help_text="The machine name in the admin console.", max_length=255
                    ),
                ),
                (
                    "last_seen",
                    models.DateTimeField(help_text="When device was last active on the tailnet."),
                ),
                (
                    "name",
                    models.CharField(help_text="The MagicDNS name of the device.", max_length=255),
                ),
                (
                    "node_id",
                    models.CharField(
                        help_text="The preferred identifier for a device.", max_length=128
                    ),
                ),
                (
                    "os",
                    models.CharField(
                        help_text="The operating system that the device is running.",
                        max_length=32,
                        verbose_name="operating system",
                    ),
                ),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=32),
                        blank=True,
                        help_text="Used as part of an ACL to restrict access.",
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "update_available",
                    models.BooleanField(
                        help_text="True if a Tailscale client version upgrade is available."
                    ),
                ),
                (
                    "user",
                    models.CharField(help_text="The user who registered the node.", max_length=64),
                ),
                (
                    "tailnet",
                    models.CharField(
                        help_text="The tailnet that the device is on.", max_length=255
                    ),
                ),
                (
                    "raw_data",
                    models.JSONField(
                        help_text="The full JSON response from the Tailscale API for this device."
                    ),
                ),
                (
                    "synced_at",
                    models.DateTimeField(help_text="When the device snapshot was synced."),
                ),
            ],
            options={
                "indexes": [
                    models.Index(fields=["synced_at"], name="tailscale_d_synced__3ffe10_idx"),
                    models.Index(fields=["tailnet"], name="tailscale_d_tailnet_47011f_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "node_id",
                    models.CharField(
                        help_text="The unique identifier for a device, as returned by the Tailscale API.",
                        max_length=128,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="The MagicDNS name of the device.", max_length=255),
                ),
                (
                    "last_seen",
                    models.DateTimeField(help_text="When device was last active on the tailnet."),
                ),
                (
                    "tailnet",
                    models.CharField(
                        help_text="The tailnet that the device is on.", max_length=255
                    ),
                ),
                (
                    "latest_snapshot",
                    models.ForeignKey(
                        help_text="The most recent snapshot of the device.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tailscale.devicesnapshot",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(fields=["last_seen"], name="tailscale_d_last_se_d045d1_idx")
                ],
            },
        ),
    ]
